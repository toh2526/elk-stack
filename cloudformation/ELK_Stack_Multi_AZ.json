{
    "AWSTemplateFormatVersion": "2010-09-09",

    "Description": "ELK Stack - Elasticsearch, Logstash, Kibana",

    "Parameters": {

        "KeyName": {
            "Default": "deploy",
            "Description": "Name of an existing EC2 KeyPair for SSH access",
            "Type": "String"
        },
        "Stage": {
            "Description": "Stage",
            "Type": "String",
            "Default": "PROD",
            "AllowedValues": [ "PROD", "CODE" ],
            "ConstraintDescription": "must be a valid stage eg. PROD, CODE"
        },
        "ElkCapacity": {
            "Description": "Autoscale Size",
            "Type": "Number",
            "Default": "1",
            "MinValue": 1,
            "MaxValue": 2
        },
        "ElkInstanceType": {
            "Description": "EC2 instance type",
            "Type": "String",
            "Default": "m3.medium",
            "AllowedValues": [
                "m3.medium",
                "m3.large",
                "r3.large"
            ],
            "ConstraintDescription": "must be an allowed EC2 instance type (m3.medium, m3.large, r3.large)"
        },
        "GoogleOAuthClientId": {
            "Description": "Google OAuth 2.0 Client ID",
            "Type": "String"
        },
        "GoogleOAuthClientSecret": {
            "Description": "Google OAuth 2.0 Client Secret",
            "Type": "String"
        },
        "GoogleOAuthAllowedDomain": {
            "Description": "Google OAuth 2.0 Allowed Domain",
            "Type": "String",
            "Default": "palomarsystems.com"
        },
        "HostName": {
            "Description": "HostName that Kibana will regard as default",
            "Type": "String",
            "Default": "elk.palomarsystems.com"
        }
    },

    "Resources": {

        "ElkAutoscalingGroup": {
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "Properties": {
                "AvailabilityZones": { "Fn::GetAZs": "" },
                "LaunchConfigurationName": { "Ref": "ElkLaunchConfig" },
                "MinSize": "1",
                "MaxSize": "12",
                "DesiredCapacity": { "Ref": "ElkCapacity" },
                "HealthCheckType": "EC2",
                "HealthCheckGracePeriod": 300,
                "NotificationConfiguration": {
						"NotificationTypes": [
                    "autoscaling:EC2_INSTANCE_LAUNCH",
                    "autoscaling:EC2_INSTANCE_TERMINATE",
                    "autoscaling:TEST_NOTIFICATION"
                  ],
						"TopicARN": { "Ref": "ElkTriggerSNSTopic" }
                },
                "Tags": [
                    {
                        "Key": "Stage",
                        "Value": { "Ref": "Stage" },
                        "PropagateAtLaunch": "true"
                    },
                    {
                        "Key": "Stack",
                        "Value": { "Ref": "AWS::StackName" },
                        "PropagateAtLaunch": "true"
                    },
                    {
                        "Key": "App",
                        "Value": "logger",
                        "PropagateAtLaunch": "true"
                    },
                    {
                        "Key": "Name",
                        "Value": { "Fn::Join":[ "-", [ { "Ref": "AWS::StackName" }, "logger" ] ] },
                        "PropagateAtLaunch": "true"
                    }
                ]
            }
        },

        "ElkScaleUpPolicy": {
            "Type": "AWS::AutoScaling::ScalingPolicy",
            "Properties": {
              "AdjustmentType": "ChangeInCapacity",
              "AutoScalingGroupName": { "Ref": "ElkAutoscalingGroup" },
              "Cooldown": "300",
              "ScalingAdjustment": "1"
            }
        },
        "ElkScaleDownPolicy": {
            "Type": "AWS::AutoScaling::ScalingPolicy",
            "Properties": {
              "AdjustmentType": "ChangeInCapacity",
              "AutoScalingGroupName": { "Ref": "ElkAutoscalingGroup" },
              "Cooldown": "60",
              "ScalingAdjustment": "-1"
            }
        },

			"ElkCPUAlarmHigh": {
			   "Type": "AWS::CloudWatch::Alarm",
			   "Properties": {
			      "EvaluationPeriods": "2",
			      "Statistic": "Average",
			      "Threshold": "90",
			      "AlarmDescription": "Alarm if CPU too high or metric disappears indicating instance is down",
			      "Period": "60",
			      "AlarmActions": [ { "Ref": "ElkScaleUpPolicy" } ],
			      "Namespace": "AWS/EC2",
			      "Dimensions": [ {
			         "Name": "AutoScalingGroupName",
			         "Value": { "Ref": "ElkAutoscalingGroup" }
			      } ],
			      "ComparisonOperator": "GreaterThanThreshold",
			      "MetricName": "CPUUtilization"
			   }
			},
			"ElkCPUAlarmIdle": {
			   "Type": "AWS::CloudWatch::Alarm",
			   "Properties": {
			      "EvaluationPeriods": "3",
			      "Statistic": "Average",
			      "Threshold": "3",
			      "AlarmDescription": "Alarm if CPU is very idle",
			      "Period": "60",
			      "AlarmActions": [ { "Ref": "ElkScaleDownPolicy" } ],
			      "Namespace": "AWS/EC2",
			      "Dimensions": [ {
			         "Name": "AutoScalingGroupName",
			         "Value": { "Ref": "ElkAutoscalingGroup" }
			      } ],
			      "ComparisonOperator": "LessThanOrEqualToThreshold",
			      "MetricName": "CPUUtilization"
			   }
			},

			"ElkTriggerSNSTopic": {
			   "Type": "AWS::SNS::Topic",
			   "Properties": {
			      "DisplayName": "Palomar-ELK-Scale-Trigger",
			      "TopicName": "Palomar-ELK-Scale-Trigger",
               "Subscription": [
						{
						   "Endpoint": "http://54.251.12.68/scale",
						   "Protocol": "http"
						}
               ]
			   }
			},

        "ElkLaunchConfig": {
            "Type": "AWS::AutoScaling::LaunchConfiguration",
            "Properties": {
                "ImageId": "ami-d6e7c084",
                "SecurityGroups": [ { "Ref": "ElkSecurityGroup" } ],
                "InstanceType": { "Ref": "ElkInstanceType" },
                "IamInstanceProfile": { "Ref": "InstanceProfile" },
                "KeyName": { "Ref": "KeyName" },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [ "\n", [
                            "#!/bin/bash -v",

                            "wget -O - http://packages.elasticsearch.org/GPG-KEY-elasticsearch | apt-key add -",
                            "echo \"deb http://packages.elasticsearch.org/logstash/1.4/debian stable main\" > /etc/apt/sources.list.d/logstash.list",
                            "echo \"deb http://packages.elasticsearch.org/elasticsearch/1.4/debian stable main\" > /etc/apt/sources.list.d/elasticsearch.list",

                            "add-apt-repository -y ppa:chris-lea/node.js",
                            "apt-get -y update",
                            "apt-get -y install language-pack-en build-essential openjdk-7-jre-headless logstash elasticsearch nodejs",

                            "wget -O /etc/logstash/conf.d/logstash-indexer.conf https://raw.githubusercontent.com/toh2526/elk-stack/master/config/logstash-indexer.conf",
                            "sed -i -e 's,@@ELASTICSEARCH,localhost,g' /etc/logstash/conf.d/logstash-indexer.conf",

                            "/usr/share/elasticsearch/bin/plugin --install elasticsearch/elasticsearch-cloud-aws/2.4.1",
                            "/usr/share/elasticsearch/bin/plugin --install mobz/elasticsearch-head",
                            "/usr/share/elasticsearch/bin/plugin --install lukas-vlcek/bigdesk",
                            "/usr/share/elasticsearch/bin/plugin --install karmi/elasticsearch-paramedic",
                            "/usr/share/elasticsearch/bin/plugin --install royrusso/elasticsearch-HQ",

                            "wget -O /etc/elasticsearch/elasticsearch.yml https://raw.githubusercontent.com/toh2526/elk-stack/master/config/elasticsearch.yml",
                            { "Fn::Join": [ "", [ "sed -i",
                                " -e 's,@@REGION,", { "Ref": "AWS::Region" }, ",g'",
                                " -e 's,@@STACK,", { "Ref": "AWS::StackName" }, ",g'",
                                " -e 's,@@APP,logger,g'",
                                " /etc/elasticsearch/elasticsearch.yml" ] ] },

                            "wget -O /etc/init/elasticsearch.conf https://raw.githubusercontent.com/toh2526/elk-stack/master/config/upstart-elasticsearch.conf",

                            "umount /mnt",
                            "mkdir /data",
                            "mount /dev/xvdb /data",
                            "chown elasticsearch /data",

                            "sysctl vm.overcommit_memory=1",

                            "cd /opt",
                            "wget -O elk-stack.tar.gz https://github.com/toh2526/elk-stack/archive/master.tar.gz",
                            "tar zxvf elk-stack.tar.gz",
                            "mv elk-stack-master/src logcabin",

                            { "Fn::Join": [ "", [ "sed -i",
                                " -e 's,@@OAUTH_ALLOWED_DOMAIN,", { "Ref": "GoogleOAuthAllowedDomain" }, ",g'",
                                " /opt/logcabin/lib/google-oauth.js" ] ] },
                            { "Fn::Join": [ "", [ "sed -i",
                                " -e 's,@@LOGCABIN_HOST,", { "Ref": "HostName" }, ",g'",
                                " -e 's,@@CLIENT_ID,", { "Ref": "GoogleOAuthClientId" }, ",g'",
                                " -e 's,@@CLIENT_SECRET,", { "Ref": "GoogleOAuthClientSecret" }, ",g'",
                                " /opt/logcabin/config.js" ] ] },

                            "adduser --disabled-password --gecos \"\" logcabin",
                            "cd logcabin && npm install && cd ..",
                            "chown -R logcabin logcabin",

                            "wget -O /etc/init/logcabin.conf https://raw.githubusercontent.com/toh2526/elk-stack/master/config/upstart-logcabin.conf",

                            "wget http://download.elasticsearch.org/kibana/kibana/kibana-latest.tar.gz",
                            "tar zxvf kibana-latest.tar.gz",
                            "mv kibana-latest kibana",

                            "start logstash",
                            "start elasticsearch",
                            "start logcabin"
                        ] ]
                    }
                }
            }
        },

        "ElkSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "SSH, Logstash, Elasticsearch, and HTTP",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "6379",
                        "ToPort": "6379",
                        "SourceSecurityGroupName": "RubyDevServers"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "8080",
                        "ToPort": "8080",
                        "SourceSecurityGroupName": "RubyDevServers"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": "0.0.0.0/0"
                    }
                ]
            }
        },

        "Role": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "Path": "/",
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [ "ec2.amazonaws.com" ]
                            }
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyName":"ec2-describe-instances",
                        "PolicyDocument": {
                            "Version" : "2012-10-17",
                            "Statement": [
                                {
                                    "Action": "ec2:DescribeInstances",
                                    "Effect": "Allow",
                                    "Resource": "*"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "InstanceProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Path": "/",
                "Roles": [ { "Ref": "Role" } ]
            }
        }
    },

    "Outputs": {
        "LogstashEndpoint": {
            "Value": { "Fn::Join": ["", [ { "Ref": "HostName" }, ":6379"]] },
            "Description": "Logging endpoint for Logstash TCP input"
        },
        "KibanaURL": {
            "Value": { "Fn::Join": ["", ["http://", { "Ref": "HostName" }, "/#/dashboard/file/logstash.json"]] },
            "Description": "URL for the Kibana Dashboard"
        },
        "GoogleOAuthRedirectUrl": {
            "Value": { "Fn::Join": ["", ["http://", { "Ref": "HostName" }, "/auth/google/callback"]] },
            "Description": "Redirect URL for the Google Developers Console"
        }
    }
}
